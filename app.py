from flask import Flask, request, send_file
from werkzeug.utils import secure_filename
from docx import Document
from docx.shared import Inches
from docx.oxml.ns import qn
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from docx2pdf import convert
import os
import io
import matplotlib.pyplot as plt
import pandas as pd
import zipfile

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'
app.config['ALLOWED_EXTENSIONS'] = {'png', 'jpg', 'jpeg', 'gif', 'pdf', 'docx'}

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in app.config['ALLOWED_EXTENSIONS']

@app.route('/')
def index():
    return '''
        <!doctype html>
        <html>
        <head>
            <title>Vulnerability Report Generator</title>
            <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        </head>
        <body>
            <div class="container">
                <h1>Vulnerability Report Generator</h1>
                <form action="/generate_report" method="post" enctype="multipart/form-data">
                    <div class="form-group">
                        <label for="title">Report Title:</label>
                        <input type="text" class="form-control" id="title" name="title" required>
                    </div>
                    <div class="form-group">
                        <label for="client_name">Client Name:</label>
                        <input type="text" class="form-control" id="client_name" name="client_name" required>
                    </div>
                    <div class="form-group">
                        <label for="prepared_by">Prepared by:</label>
                        <input type="text" class="form-control" id="prepared_by" name="prepared_by" required>
                    </div>
                    <div class="form-group">
                        <label for="date">Date:</label>
                        <input type="date" class="form-control" id="date" name="date" required>
                    </div>
                    <div class="form-group">
                        <label for="logo">Upload Logo (optional):</label>
                        <input type="file" class="form-control-file" id="logo" name="logo">
                    </div>
                    <div class="form-group">
                        <label for="overview">Overview:</label>
                        <textarea class="form-control" id="overview" name="overview" rows="4" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="summary_results">Summary of Results:</label>
                        <textarea class="form-control" id="summary_results" name="summary_results" rows="4" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="assets_tested">Assets Tested:</label>
                        <textarea class="form-control" id="assets_tested" name="assets_tested" rows="2" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="project_team">Project Team:</label>
                        <textarea class="form-control" id="project_team" name="project_team" rows="2" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="operating_systems">Operating Systems:</label>
                        <input type="text" class="form-control" id="operating_systems" name="operating_systems" required>
                    </div>
                    <div class="form-group">
                        <label for="tools">Tools Used:</label>
                        <input type="text" class="form-control" id="tools" name="tools" required>
                    </div>
                    <div class="form-group">
                        <label for="browsers">Browsers:</label>
                        <input type="text" class="form-control" id="browsers" name="browsers" required>
                    </div>
                    <div class="form-group">
                        <label for="test_dates">Test Dates:</label>
                        <input type="text" class="form-control" id="test_dates" name="test_dates" required>
                    </div>
                    <div id="vulnerabilities_container">
                        <div class="form-group">
                            <label for="vuln_count">Number of Vulnerabilities:</label>
                            <input type="number" class="form-control" id="vuln_count" name="vuln_count" min="1" max="100" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="appendices">Appendices:</label>
                        <textarea class="form-control" id="appendices" name="appendices" rows="4"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="terms_conditions">Terms and Conditions:</label>
                        <textarea class="form-control" id="terms_conditions" name="terms_conditions" rows="4"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="export_format">Export Format:</label>
                        <select class="form-control" id="export_format" name="export_format" required>
                            <option value="docx">DOCX</option>
                            <option value="pdf">PDF</option>
                            <option value="encrypted_pdf">Encrypted PDF</option>
                            <option value="both">Both</option>
                        </select>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="addVulnerability()">Add Vulnerability</button>
                    <button type="submit" class="btn btn-success">Generate Report</button>
                </form>
                <script>
                    let vulnCount = 0;

                    function addVulnerability() {
                        vulnCount++;
                        const container = document.getElementById('vulnerabilities_container');
                        const vulnHtml = `
                            <div class="vulnerability">
                                <h3>Vulnerability ${vulnCount}</h3>
                                <div class="form-group">
                                    <label for="vulnerabilities[${vulnCount - 1}][name_of_vulnerability]">Name of Vulnerability:</label>
                                    <input type="text" class="form-control" id="vulnerabilities[${vulnCount - 1}][name_of_vulnerability]" name="vulnerabilities[${vulnCount - 1}][name_of_vulnerability]" required>
                                </div>
                                <div class="form-group">
                                    <label for="vulnerabilities[${vulnCount - 1}][severity_level]">Severity Level:</label>
                                    <select class="form-control" id="vulnerabilities[${vulnCount - 1}][severity_level]" name="vulnerabilities[${vulnCount - 1}][severity_level]" required>
                                        <option value="Low">Low</option>
                                        <option value="Medium">Medium</option>
                                        <option value="High">High</option>
                                        <option value="Critical">Critical</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="vulnerabilities[${vulnCount - 1}][description]">Description:</label>
                                    <textarea class="form-control" id="vulnerabilities[${vulnCount - 1}][description]" name="vulnerabilities[${vulnCount - 1}][description]" rows="4" required></textarea>
                                </div>
                                <div class="form-group">
                                    <label for="vulnerabilities[${vulnCount - 1}][affected_asset]">Affected Asset:</label>
                                    <input type="text" class="form-control" id="vulnerabilities[${vulnCount - 1}][affected_asset]" name="vulnerabilities[${vulnCount - 1}][affected_asset]" required>
                                </div>
                                <div class="form-group">
                                    <label for="vulnerabilities[${vulnCount - 1}][steps_count]">Number of Steps:</label>
                                    <input type="number" class="form-control" id="vulnerabilities[${vulnCount - 1}][steps_count]" name="vulnerabilities[${vulnCount - 1}][steps_count]" min="1" onchange="updateSteps(${vulnCount - 1})">
                                </div>
                                <div class="steps_container" id="vulnerabilities[${vulnCount - 1}][steps]"></div>
                                <div class="form-group">
                                    <label for="vulnerabilities[${vulnCount - 1}][mitigation]">Mitigation:</label>
                                    <textarea class="form-control" id="vulnerabilities[${vulnCount - 1}][mitigation]" name="vulnerabilities[${vulnCount - 1}][mitigation]" rows="4" required></textarea>
                                </div>
                                <div class="form-group">
                                    <label for="vulnerabilities[${vulnCount - 1}][status]">Status:</label>
                                    <select class="form-control" id="vulnerabilities[${vulnCount - 1}][status]" name="vulnerabilities[${vulnCount - 1}][status]" required>
                                        <option value="Open">Open</option>
                                        <option value="Closed">Closed</option>
                                    </select>
                                </div>
                                <hr>
                            </div>`;
                        container.insertAdjacentHTML('beforeend', vulnHtml);
                    }

                    function updateSteps(vulnIndex) {
                        const stepsCount = document.getElementById(`vulnerabilities[${vulnIndex}][steps_count]`).value;
                        const stepsContainer = document.getElementById(`vulnerabilities[${vulnIndex}][steps]`);
                        stepsContainer.innerHTML = '';
                        for (let i = 0; i < stepsCount; i++) {
                            const stepHtml = `
                                <div class="form-group">
                                    <label for="vulnerabilities[${vulnIndex}][steps][${i}][step_description]">Step ${i + 1} Description:</label>
                                    <textarea class="form-control" id="vulnerabilities[${vulnIndex}][steps][${i}][step_description]" name="vulnerabilities[${vulnIndex}][steps][${i}][step_description]" rows="2" required></textarea>
                                </div>
                                <div class="form-group">
                                    <label for="vulnerabilities[${vulnIndex}][steps][${i}][screenshot]">Step ${i + 1} Screenshot (optional):</label>
                                    <input type="file" class="form-control-file" id="vulnerabilities[${vulnIndex}][steps][${i}][screenshot]" name="vulnerabilities[${vulnIndex}][steps][${i}][screenshot]">
                                </div>`;
                            stepsContainer.insertAdjacentHTML('beforeend', stepHtml);
                        }
                    }
                </script>
            </div>
        </body>
        </html>
    '''

@app.route('/generate_report', methods=['POST'])
def generate_report():
    title = request.form['title']
    client_name = request.form['client_name']
    prepared_by = request.form['prepared_by']
    date = request.form['date']
    overview = request.form['overview']
    summary_results = request.form['summary_results']
    assets_tested = request.form['assets_tested']
    project_team = request.form['project_team']
    operating_systems = request.form['operating_systems']
    tools = request.form['tools']
    browsers = request.form['browsers']
    test_dates = request.form['test_dates']
    appendices = request.form['appendices']
    terms_conditions = request.form['terms_conditions']
    export_format = request.form['export_format']
    
    vulnerabilities = []
    for i in range(int(request.form['vuln_count'])):
        vuln = {
            'name_of_vulnerability': request.form[f'vulnerabilities[{i}][name_of_vulnerability]'],
            'severity_level': request.form[f'vulnerabilities[{i}][severity_level]'],
            'description': request.form[f'vulnerabilities[{i}][description]'],
            'affected_asset': request.form[f'vulnerabilities[{i}][affected_asset]'],
            'steps': [request.form[f'vulnerabilities[{i}][steps][{j}][step_description]'] for j in range(int(request.form[f'vulnerabilities[{i}][steps_count]']))],
            'mitigation': request.form[f'vulnerabilities[{i}][mitigation]'],
            'status': request.form[f'vulnerabilities[{i}][status]']
        }

        # Handle screenshots
        steps = []
        for j in range(int(request.form[f'vulnerabilities[{i}][steps_count]'])):
            step_description = request.form[f'vulnerabilities[{i}][steps][{j}][step_description]']
            screenshot = request.files.get(f'vulnerabilities[{i}][steps][{j}][screenshot]')
            if screenshot and allowed_file(screenshot.filename):
                filename = secure_filename(screenshot.filename)
                filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
                screenshot.save(filepath)
                steps.append({'description': step_description, 'screenshot': filepath})
            else:
                steps.append({'description': step_description, 'screenshot': None})
        vuln['steps'] = steps
        vulnerabilities.append(vuln)
    
    doc = Document()
    if request.files.get('logo'):
        logo = request.files['logo']
        logo_filename = secure_filename(logo.filename)
        logo.save(os.path.join(app.config['UPLOAD_FOLDER'], logo_filename))
        logo_path = os.path.join(app.config['UPLOAD_FOLDER'], logo_filename)
        doc.add_picture(logo_path, width=Inches(2))
        doc.add_paragraph()  # Add a new paragraph for spacing

    doc.add_heading(title, 0)
    doc.add_heading('Client Details', level=1)
    doc.add_paragraph(f"Client Name: {client_name}")
    doc.add_paragraph(f"Prepared By: {prepared_by}")
    doc.add_paragraph(f"Date: {date}")

    doc.add_heading('Overview', level=1)
    doc.add_paragraph(overview)
    doc.add_heading('Summary of Results', level=1)
    doc.add_paragraph(summary_results)
    doc.add_heading('Assets Tested', level=1)
    doc.add_paragraph(assets_tested)
    doc.add_heading('Project Team', level=1)
    doc.add_paragraph(project_team)
    doc.add_heading('Operating Systems', level=1)
    doc.add_paragraph(operating_systems)
    doc.add_heading('Tools Used', level=1)
    doc.add_paragraph(tools)
    doc.add_heading('Browsers', level=1)
    doc.add_paragraph(browsers)
    doc.add_heading('Test Dates', level=1)
    doc.add_paragraph(test_dates)
    
    doc.add_heading('Vulnerabilities', level=1)
    for vuln in vulnerabilities:
        doc.add_heading(vuln['name_of_vulnerability'], level=2)
        doc.add_paragraph(f"Severity Level: {vuln['severity_level']}")
        doc.add_paragraph(f"Description: {vuln['description']}")
        doc.add_paragraph(f"Affected Asset: {vuln['affected_asset']}")
        
        doc.add_heading('Steps to Reproduce', level=3)
        for step in vuln['steps']:
            doc.add_paragraph(step['description'])
            if step['screenshot']:
                doc.add_picture(step['screenshot'], width=Inches(2))
        
        doc.add_heading('Mitigation', level=3)
        doc.add_paragraph(vuln['mitigation'])
        doc.add_heading('Status', level=3)
        doc.add_paragraph(vuln['status'])
    
    doc.add_heading('Appendices', level=1)
    doc.add_paragraph(appendices)
    doc.add_heading('Terms and Conditions', level=1)
    doc.add_paragraph(terms_conditions)
    
    # Save DOCX file
    docx_filename = "vulnerability_report.docx"
    docx_path = os.path.join(app.config['UPLOAD_FOLDER'], docx_filename)
    doc.save(docx_path)
    
    # Convert DOCX to PDF
    if export_format in ['pdf', 'both']:
        pdf_filename = "vulnerability_report.pdf"
        pdf_path = os.path.join(app.config['UPLOAD_FOLDER'], pdf_filename)
        convert(docx_path, pdf_path)
    
    # Encrypt PDF if requested
    if export_format == 'encrypted_pdf' or export_format == 'both':
        encrypted_pdf_path = os.path.join(app.config['UPLOAD_FOLDER'], "encrypted_vulnerability_report.pdf")
        encrypt_pdf(pdf_path, encrypted_pdf_path, password="yourpassword")
    
    # Create ZIP file for multiple formats
    zip_filename = "vulnerability_report.zip"
    zip_path = os.path.join(app.config['UPLOAD_FOLDER'], zip_filename)
    with zipfile.ZipFile(zip_path, 'w') as zipf:
        zipf.write(docx_path, docx_filename)
        if export_format in ['pdf', 'both']:
            zipf.write(pdf_path, pdf_filename)
        if export_format == 'encrypted_pdf' or export_format == 'both':
            zipf.write(encrypted_pdf_path, "encrypted_vulnerability_report.pdf")
    
    return send_file(zip_path, as_attachment=True)

def encrypt_pdf(input_pdf, output_pdf, password):
    from PyPDF2 import PdfFileReader, PdfFileWriter
    pdf_writer = PdfFileWriter()
    pdf_reader = PdfFileReader(input_pdf)
    for page_num in range(pdf_reader.numPages):
        pdf_writer.addPage(pdf_reader.getPage(page_num))
    pdf_writer.encrypt(password)
    with open(output_pdf, 'wb') as out_file:
        pdf_writer.write(out_file)

if __name__ == '__main__':
    if not os.path.exists(app.config['UPLOAD_FOLDER']):
        os.makedirs(app.config['UPLOAD_FOLDER'])
    app.run(debug=True)